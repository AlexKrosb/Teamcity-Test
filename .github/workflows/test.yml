name: TeamCity Test

on: push

jobs:
  run_teamcity_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'
          maven-version: '3.8.3'

      - name: Install ifconfig
        run: sudo apt-get update && sudo apt-get install -y net-tools

      - name: Set up host environment variables
        # Команда для определения ip адреса для обращения из другого контейнера, рекомендуется в документации Selenoid UI: https://aerokube.com/selenoid-ui/latest/
        run: |
          echo "HOST=$(ifconfig | grep -E "([0-9]{1,3}\.){3}[0-9]{1,3}" | grep -v 127.0.0.1 | awk '{ print $2 }' | cut -f2 -d: | head -n1)" >> $GITHUB_ENV

      - name: Setup host config.properties
        run: | 
          echo -e "host=$HOST:8111\n" >> src/main/resources/config.properties

      - name: Pull Selenoid Chrome/Firefox/..
        run: docker pull selenoid/vnc:firefox_89.0

      - name: Display Current Directory
        run: pwd

      - name: Prepare Selenoid config
        run: mkdir selenoid && cd selenoid && mkdir config && cp /home/runner/work/Teamcity-Test/Teamcity-Test/infra/browsers.json config/

      - name: Run Selenoid
        run: |
          cd selenoid && ls && docker run -d --name selenoid \
          -v /var/run/docker.sock:/var/run/docker.sock \
          -v $(pwd)/config:/etc/selenoid/:ro \
          -p 4444:4444 \
          aerokube/selenoid:latest-release

      - name: Run Selenoid UI
        run: |
          docker run -d --name selenoid-ui \
          -p 8080:8080 \
          aerokube/selenoid-ui \
          --selenoid-uri http://$HOST:4444

      - name: Run TeamCity Server
        run: |
          docker run -u 0 --name teamcity-server  \
          -v $(pwd)/tmp/teamcity_server/datadir:/data/teamcity_server/datadir \
          -v $(pwd)/tmp/teamcity_server/logs:/opt/teamcity/logs  \
          -p 8111:8111 \
          jetbrains/teamcity-server:2023.11.1

      - name: Set execute permissions for mvnw
        run: chmod +x mvnw

      - name: Set up TeamCity Server
        run: ./mvnw clean test -Dtest=SetupTest#startUpTest

      - name: Print Container Logs
        run: |
          docker logs teamcity-server

      - name: Set up superUserToken environment variable and config property
        run: |
          SUPER_USER_TOKEN=$(docker logs teamcity-server | grep -o 'Super user authentication token: [0-9]*' | awk '{print $NF}')
            echo "SUPER_USER_TOKEN=$SUPER_USER_TOKEN"
            echo "$GITHUB_ENV"
          echo -e "superUserToken=$SUPER_USER_TOKEN\n" >> src/main/resources/config.properties
          cat src/main/resources/config.properties

      - name: Run TeamCity Agent
        run: |
          docker run -e SERVER_URL="http://$HOST:8111" -u 0 -d --name teamcity-agent \
          -v $(pwd)/tmp/teamcity_agent/conf:/data/teamcity_agent/conf \
          jetbrains/teamcity-agent:2023.11.1

      - name: Set up TeamCity Agent

        run: ./mvnw test -Dtest=AgentsAuthorizedTest#authorizeAgentTest

      - name: Run API tests
        run: ./mvnw test -DsuiteXmlFile=testng-suites/api-suite.xml

      - name: Run UI tests
        run: ./mvnw test -DsuiteXmlFile=testng-suites/ui-suite.xml

      - name: Load test report history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
            ref: gh-pages
            path: gh-pages

      - name: Build test report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
            gh_pages: gh-pages
            allure_history: allure-history
            allure_results: target/allure-results

      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            publish_branch: gh-pages
            publish_dir: allure-history